import Assets_Indicators.*;
import Database_Functions.*;
import Development_Indicators.*;
import java.util.ArrayList;
import java.util.Scanner;

import static java.lang.System.*;

interface search {
    public<T> double searchbyYear(ArrayList<? extends Development_Indicators> arr , int year);
    public<T> ArrayList<Double> searchbyInterval(ArrayList<? extends Development_Indicators> arr,int a , int b);
}

interface search_assets {
    public<T> long searchbyYear_assets(ArrayList<? extends Assets_Indicators> arr , int year);
    public<T> ArrayList<Long> searchbyInterval_assets(ArrayList<? extends Assets_Indicators> arr,int a , int b);

}


public class Economy_Data_Visualization {
        static ArrayList<country> Countries = new ArrayList<country>();
        static SQL_Acc acc=new SQL_Acc();
        static Scanner sc=new Scanner(in);

        public static void print_Indicators(){
            out.println("1-> Gross Domestic Product(i.e. The total monetary value generated by a country in a year)");
            out.println("2-> Population");
            out.println("3-> Total Reserves(Monetary Gold and IMF reserves of the Country)");
            out.println("4-> Consumer Price Index(i.e. A measure of change of prices in past years)");
            out.println("5-> Deposit Interest Rate(i.e. Rate paid by banks to their customers)");
            out.println("6-> Exchange Rate(i.e. Strength of Currency of a nation against US Dollar)");
            out.println("7-> Import Percentage of GDP(i.e. How much percentage of GDP is spent on Importing Goods)");
            out.println("8-> Export Percentage of GDP(i.e. How much percentage of GDP is spent on Exporting Goods)");
            out.println("9-> Tax Revenue Percentage(Funds collected from Imports)");

            out.println("Any else key will go back");
        }
        static void print_Menu(){
            out.println("Menu:--->");
            out.println("1-> Plot Specific Country Data");
            out.println("2-> Compare Countries");
            out.println("3-> Update Country Data");
            out.println("4-> Delete Country Data");
            out.println("0-> Exit");
            out.println("Any other key will Print the Menu again");
        }
     static void print_Menu1(){
        out.println("Menu_1:--->");
        out.println("You want to Plot:::");
        Economy_Data_Visualization.print_Indicators();
    }
    static void print_Menu2(){
        out.println("Menu_2:--->");
        out.println("On the Basis of:::");
        Economy_Data_Visualization.print_Indicators();
    }
    static void print_Menu3(){
        out.println("Menu_3:--->");
        out.println("You want to change:::");
        Economy_Data_Visualization.print_Indicators();
    }

    public static void main(String[] args)
    {
        out.println("<----Hello, Welcome to the Economy Data Visualization Software----->");
        int input=-100;
        if(!SQLDataRegistrar.doesDBexists(acc.dbName)){
            SQLDataRegistrar.main(new String[]{""});
        }
        //Initializing Countries Array
        ArrayList<country> Countries=new ArrayList<>();
        Object[] Countries_Names= SQLDataExtractor.getCountryInfo();
        String tempStr,C_Code,C_Name;
        country tempC;
        for(Object i:Countries_Names){
            tempStr=i.toString();
            C_Code=tempStr.substring(0,3);
            C_Name=tempStr.substring(6);
            tempC=new country(C_Code,C_Name);
            Countries.add(tempC);
        }
        while (input!=0){
            input=-100;
            while(input==-100){
                print_Menu();
                input=take_input();
            }
            switch (input){
                case 1:
                    Country_Plot(Countries);
                    continue;
                case 2:
                    ComparePlot(Countries);
                    continue;
                case 3:
                    Update_Data();
                    continue;
                case 4:
                    continue;
                default:
            }
        }
        out.print("\n\n Thanks for using our Visualization Software :)");
    }

    private static void Update_Data() {
        print_Menu3();
        int input=take_input();
        switch (input){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
        }
    }

    private static void ComparePlot(ArrayList<country> countries) {
        print_Menu2();
        int input=take_input();
        switch (input){
            case 1: Plot_Chart.compare_Bar(countries,new GDP());break;
            case 2: Plot_Chart.compare_Bar(countries,new Population());break;
            case 3: Plot_Chart.compare_Bar(countries,new Reserves());break;
            case 4: Plot_Chart.compare_line(countries,new CPI());break;
            case 5: Plot_Chart.compare_line(countries,new Deposit_Interest_Rate());break;
            case 6: Plot_Chart.compare_line(countries,new Exchange_Rate());break;
            case 7:
            case 8:
            case 9:
            default: break;
        }
    }

    private static void Country_Plot(ArrayList<country> countries) {
        print_Menu1();
        int input=take_input();
        switch (input){
            case 1: Plot_Chart.plot_bar(countries,new GDP()); break;
            case 2: Plot_Chart.plot_bar(countries,new Population()); break;
            case 3: Plot_Chart.plot_bar(countries,new Reserves());break;
            case 4: Plot_Chart.plot_line(countries,new CPI()); break;
            case 5: Plot_Chart.plot_line(countries,new Deposit_Interest_Rate());break;
            case 6: Plot_Chart.plot_line(countries,new Exchange_Rate());break;
            case 7:
            case 8:
            case 9:
        }
    }

    private static int take_input() {
            out.print("Enter Your Choice:");
            if(sc.hasNextInt()){
                return sc.nextInt();
            }
            else{
                out.println("Please Enter only Integer Values!!!!!!!!!!!!");
                return -100;
            }
    }
}
